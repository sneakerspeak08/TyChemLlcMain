/*
  # Fix products table setup

  1. New Tables
    - `products`
      - `id` (bigint, primary key, auto-generated)
      - `name` (text, required)
      - `description` (text, required) 
      - `quantity` (text, required)
      - `created_at` (timestamp with timezone, default now)
      - `updated_at` (timestamp with timezone, default now)

  2. Security
    - Enable RLS on `products` table
    - Add policies for public read access and authenticated user management
    - Add trigger for automatic updated_at timestamp updates

  3. Data
    - Insert default chemical products
*/

-- Create the products table if it doesn't exist
CREATE TABLE IF NOT EXISTS public.products (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL,
  description TEXT NOT NULL,
  quantity TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Enable Row Level Security
ALTER TABLE public.products ENABLE ROW LEVEL SECURITY;

-- Drop existing policies if they exist to avoid conflicts
DROP POLICY IF EXISTS "Allow public read access to products" ON public.products;
DROP POLICY IF EXISTS "Allow authenticated users to insert products" ON public.products;
DROP POLICY IF EXISTS "Allow authenticated users to update products" ON public.products;
DROP POLICY IF EXISTS "Allow authenticated users to delete products" ON public.products;

-- Create policies for the products table
CREATE POLICY "Allow public read access to products"
  ON public.products
  FOR SELECT
  TO anon, authenticated
  USING (true);

CREATE POLICY "Allow authenticated users to insert products"
  ON public.products
  FOR INSERT
  TO authenticated
  WITH CHECK (true);

CREATE POLICY "Allow authenticated users to update products"
  ON public.products
  FOR UPDATE
  TO authenticated
  USING (true)
  WITH CHECK (true);

CREATE POLICY "Allow authenticated users to delete products"
  ON public.products
  FOR DELETE
  TO authenticated
  USING (true);

-- Create function to update updated_at column
CREATE OR REPLACE FUNCTION public.update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Drop existing trigger if it exists
DROP TRIGGER IF EXISTS update_products_updated_at ON public.products;

-- Create trigger to automatically update updated_at
CREATE TRIGGER update_products_updated_at
  BEFORE UPDATE ON public.products
  FOR EACH ROW
  EXECUTE FUNCTION public.update_updated_at_column();

-- Insert default products (only if table is empty)
INSERT INTO public.products (name, description, quantity)
SELECT * FROM (VALUES
  ('Sodium Hydroxide', 'Caustic soda in pellet form, technical grade. Widely used in various industrial processes including chemical manufacturing, paper production, and water treatment.', '40,000 lbs'),
  ('Citric Acid', 'Anhydrous, food grade citric acid. Essential ingredient in food and beverage manufacturing, pharmaceutical formulations, and cleaning products.', '15,000 kgs'),
  ('Glycerin', 'USP grade, 99.7% pure glycerin. Versatile ingredient used in pharmaceutical, personal care, and food applications. Known for its humectant properties.', '4 totes'),
  ('Potassium Chloride', 'High purity potassium chloride suitable for various industrial applications including fertilizers, pharmaceuticals, and food processing.', '25,000 kgs'),
  ('Methanol', 'Technical grade methanol for industrial use. Essential solvent for various chemical processes and manufacturing applications.', '6 tankers'),
  ('Sulfuric Acid', 'Industrial grade sulfuric acid. Fundamental chemical for various industrial processes and manufacturing applications.', '3 rail cars'),
  ('Ethylene Glycol', 'Industrial grade ethylene glycol. Widely used in antifreeze formulations and as a chemical intermediate.', '8 totes'),
  ('Sodium Carbonate', 'Pure soda ash suitable for various industrial applications. Essential in glass manufacturing and chemical processing.', '50,000 lbs'),
  ('Acetic Acid', 'Glacial acetic acid for industrial use. Key ingredient in various chemical processes and manufacturing applications.', '12 totes'),
  ('Hydrogen Peroxide', 'Industrial strength hydrogen peroxide. Essential for bleaching, disinfection, and chemical synthesis.', '5 totes')
) AS default_products(name, description, quantity)
WHERE NOT EXISTS (SELECT 1 FROM public.products LIMIT 1);